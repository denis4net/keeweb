language: generic
os:
- linux
sudo: required
osx_image: xcode7.3
services:
- docker
script:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then npm cache clean -f; npm install && npm
  run build-ios; fi;
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo docker run -ti --rm --workdir /var/src
  -v $(pwd):/var/src denis4inet/build-keeweb bash -c "npm install && npm run build-android";
  fi;
after_script:
- export OWNER=$(git remote get-url origin | sed -re 's/git\@github\.com\:(.*)\/(.*)\.git/\1/g')
- export REPO=$(git remote get-url origin | sed -re 's/git\@github\.com\:(.*)\/(.*)\.git/\2/g')
- export RELEASE_TAG=$(git rev-parse HEAD | head -c 8)
- 'RELEASE_INFO=$(curl --data "{\"tag_name\": \"${RELEASE_TAG}\",\"target_commitish\": \"master\",\"name\":
  \"${RELEASE_TAG}\",\"body\": \"Release\", \"draft\": false,\"prerelease\": false}"
  "https://api.github.com/repos/${OWNER}/${REPO}/releases?access_token=${GITHUB_TOKEN}")'
- echo "${RELEASE_INFO} ${OWNER} ${REPO}"
- export RELEASE_ID=$(echo $RELEASE_INFO | python -c "import sys; import json; print(json.load(sys.stdin)['id'])")
- 'curl -H "Authorization: token ${GITHUB_TOKEN}" -H "Accept: application/vnd.github.manifold-preview"
  -H "Content-Type: application/zip" --data-binary @./cordova/platforms/android/build/outputs/apk/android-debug.apk
  "https://uploads.github.com/repos/${OWNER}/${REPO}/releases/${RELEASE_ID}/assets?name=keeweb.apk"'
